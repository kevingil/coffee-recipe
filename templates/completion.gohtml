{{define "completion"}}

<section id="container" class="w-full">

	<div class="container text-zinc-800 max-w-2xl px-2 py-2 sm:py-6 sm:px-6">
		<!-- Post input box-->
        <article class="border bg-white shadow rounded-md mt-6 p-4 w-full mx-auto">
            <p class="font-bold">Coffee Recipe</p>
            <div class="flex flex-col">
                <div id="result-placeholder" class="flex-1 py-1 animate-pulse">
                <div class="h-2 bg-slate-700 rounded"></div>
                <div class="space-y-3 mt-3">
                    <div class="grid grid-cols-3 gap-4">
                    <div class="h-2 bg-slate-700 rounded col-span-2"></div>
                    <div class="h-2 bg-slate-700 rounded col-span-1"></div>
                    </div>
                    <div class="h-2 bg-slate-700 rounded"></div>
                </div>
                </div>
                <div id="result" class="text-left w-full"></div>
                <div id="tryagain" class="text-left w-full p-4 hidden">
                <a role="button" hx-get="/" hx-push-url="true" hx-boost="true"
                hx-swap="innerHTML transition:true" hx-target="#container" hx-replace-url="/" 
                class="bg-zinc-900 hover:bg-zinc-900 text-white px-4 py-2
                font-bold float-right border-b-2 border-r-2 border-amber-950 hover:border-amber-900 rounded">
                New Recipe</a>
                </div>
            </div>
    </article>

		<div id="result-wrap"></div>

	</div>
</section>

<script>
    
	let sseConnection = null;
	function stream(){
		
		if (sseConnection) {
			sseConnection.close();
		}

		sseConnection = new EventSource(`/api/stream-recipe?question=${encodeURIComponent(question)}`);
		sseConnection.addEventListener("message", function (event) {
			document.getElementById('result-placeholder').style.display = 'none';
			res += event.data;
			renderMarkdown(res);

		});

		sseConnection.addEventListener("error", function (event) {
			sseConnection.close();
			sseConnection = null;
			console.log("Stream ended");
			showTryAgainButton();
		});
	}



	//prompt user to try again
	function showTryAgainButton() {
		const tryAgainElement = document.getElementById('tryagain');
		tryAgainElement.classList.remove('hidden');
	}

	// Convert stream to html as it arrives
	function renderMarkdown(markdown) {

		sseConnection.addEventListener("message", function (event) {
			document.getElementById('result-placeholder').style.display = 'none';

			document.getElementById('result').innerHTML = marked.parse(markdown);

		});
	}
</script>


{{end}}




